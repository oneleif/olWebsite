version: 2.1

orbs:
  aws-code-deploy: circleci/aws-code-deploy@1.0.0
  aws-cli: circleci/aws-cli@0.1.20

commands:
  build-docker-image:
    parameters:
      environment:
        type: string
    steps:
      - setup_remote_docker
      - run:
          name: Build docker release image
          command: |
            docker build -t oneleif-api:latest -f web.Dockerfile --build-arg env=<< parameters.environment >>  .
            docker tag oneleif-api:latest oneleif-api:$CIRCLE_SHA1
  deploy-to-aws:
    parameters:
      environment:
        type: string
        default: staging
    steps:
      - checkout
      - build-docker-image:
          environment: << parameters.environment >>
      - run:
          name: Create revision bundle
          command: |
            mkdir -p $BUNDLE_DIR
            docker save oneleif-api | gzip > $BUNDLE_DIR/oneleif-api.$CIRCLE_SHA1.tar.gz
            cp -r Deploy/* $BUNDLE_DIR/
      - aws-cli/setup:
          aws-region: AWS_REGION
      - aws-code-deploy/push-bundle:
          application-name: $CODE_DEPLOY_APP_NAME
          bundle-bucket: $CODE_DEPLOY_BUNDLE_BUCKET
          bundle-key: << parameters.environment >>/$CIRCLE_SHA1
          bundle-source: $BUNDLE_DIR
      - aws-code-deploy/deploy-bundle:
          application-name: $CODE_DEPLOY_APP_NAME
          bundle-bucket: $CODE_DEPLOY_BUNDLE_BUCKET
          bundle-key: << parameters.environment >>/$CIRCLE_SHA1
          deployment-group: << parameters.environment >>
  install-swift-dependencies:
    steps:
      - run:
          name: Install SSL libraries
          command: |
            apt-get -qq update && apt-get install -y \
            libssl-dev zlib1g-dev \
            && rm -r /var/lib/apt/lists/*
      - run:
          name: Copy library filters
          command: mkdir -p /build/lib && cp -R /usr/lib/swift/linux/*.so* /build/lib

jobs:
  test:
    docker:
      - image: swift:5.1
      - image: circleci/postgres:latest
        environment:
          POSTGRES_USER: oneleif
          POSTGRES_PASSWORD: root
          POSTGRES_DB: oneleif-testing
          POSTGRES_INITDB_ARGS: --auth-local password --auth-host password
    steps:
      - install-swift-dependencies
      - checkout
      - run:
          name: Compile code
          command: swift build
      - run:
          name: Run unit tests
          command: swift test

  test-release:
    docker:
      - image: swift:5.1
    steps:
      - install-swift-dependencies
      - checkout
      - run:
          name: Compile code with optimizations
          command: swift build -c release

  test-docker-image:
    docker:
      - image: circleci/golang:latest
    steps:
      - checkout
      - build-docker-image:
          environment: staging

  build-and-deploy-staging:
    docker:
      - image: circleci/golang:latest
    steps:
      - deploy-to-aws:
          environment: staging

  build-and-deploy-production:
    docker:
      - image: circleci/golang:latest
    steps:
      - deploy-to-aws:
          environment: production

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - test
      - test-release
      - test-docker-image:
          requires:
            - test
            - test-release
      - build-and-deploy-staging:
          requires:
            - test-docker-image
          filters:
            branches:
              only:
                - develop
          context: oneleif-aws
      - build-and-deploy-production:
          requires:
            - test-docker-image
          filters:
            branches:
              only:
                - master
          context: oneleif-aws
